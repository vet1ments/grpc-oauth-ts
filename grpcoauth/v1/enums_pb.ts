// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file grpcoauth/v1/enums.proto (package grpcoauth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum grpcoauth.v1.GrantType
 */
export enum GrantType {
  /**
   * 기본값wef
   *
   * @generated from enum value: GRANT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GRANT_TYPE_AUTHORIZATION_CODE = 1;
   */
  AUTHORIZATION_CODE = 1,

  /**
   * @generated from enum value: GRANT_TYPE_REFRESH_TOKEN = 2;
   */
  REFRESH_TOKEN = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GrantType)
proto3.util.setEnumType(GrantType, "grpcoauth.v1.GrantType", [
  { no: 0, name: "GRANT_TYPE_UNSPECIFIED" },
  { no: 1, name: "GRANT_TYPE_AUTHORIZATION_CODE" },
  { no: 2, name: "GRANT_TYPE_REFRESH_TOKEN" },
]);

/**
 * @generated from enum grpcoauth.v1.RoleType
 */
export enum RoleType {
  /**
   * @generated from enum value: ROLE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ROLE_TYPE_ADMIN = 1;
   */
  ADMIN = 1,

  /**
   * @generated from enum value: ROLE_TYPE_USER = 2;
   */
  USER = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RoleType)
proto3.util.setEnumType(RoleType, "grpcoauth.v1.RoleType", [
  { no: 0, name: "ROLE_TYPE_UNSPECIFIED" },
  { no: 1, name: "ROLE_TYPE_ADMIN" },
  { no: 2, name: "ROLE_TYPE_USER" },
]);

/**
 * @generated from enum grpcoauth.v1.ResponseType
 */
export enum ResponseType {
  /**
   * @generated from enum value: RESPONSE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RESPONSE_TYPE_SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: RESPONSE_TYPE_FAIL = 2;
   */
  FAIL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ResponseType)
proto3.util.setEnumType(ResponseType, "grpcoauth.v1.ResponseType", [
  { no: 0, name: "RESPONSE_TYPE_UNSPECIFIED" },
  { no: 1, name: "RESPONSE_TYPE_SUCCESS" },
  { no: 2, name: "RESPONSE_TYPE_FAIL" },
]);

/**
 * @generated from enum grpcoauth.v1.LoginType
 */
export enum LoginType {
  /**
   * @generated from enum value: LOGIN_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: LOGIN_TYPE_NATIVE = 1;
   */
  NATIVE = 1,

  /**
   * @generated from enum value: LOGIN_TYPE_KAKAO = 2;
   */
  KAKAO = 2,

  /**
   * @generated from enum value: LOGIN_TYPE_NAVER = 3;
   */
  NAVER = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(LoginType)
proto3.util.setEnumType(LoginType, "grpcoauth.v1.LoginType", [
  { no: 0, name: "LOGIN_TYPE_UNSPECIFIED" },
  { no: 1, name: "LOGIN_TYPE_NATIVE" },
  { no: 2, name: "LOGIN_TYPE_KAKAO" },
  { no: 3, name: "LOGIN_TYPE_NAVER" },
]);

/**
 * @generated from enum grpcoauth.v1.TokenType
 */
export enum TokenType {
  /**
   * @generated from enum value: TOKEN_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TOKEN_TYPE_BEARER = 1;
   */
  BEARER = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(TokenType)
proto3.util.setEnumType(TokenType, "grpcoauth.v1.TokenType", [
  { no: 0, name: "TOKEN_TYPE_UNSPECIFIED" },
  { no: 1, name: "TOKEN_TYPE_BEARER" },
]);

